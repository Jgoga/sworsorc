Config files use JSON, a lightweight format for nested name:value pairs. 

Name is a string. Value is a string, or a number, or a nested thing (an object or array, see the example). 

The scenario format is easiest seen by looking at the example file. 

Since JSON doesn't support comments, I've annotated parts of the example file below:

First, the big picture is: 

{
top-level-namevalue-pairs-go-by-themselves
"sunTrackSetting":{solar-config-stuff}
"players":[array of objects, one for each player. each object has player setup info (stuff like unit counts, provinces)]
"neutrals":[array of objects, one for each neutral (just like players, but with diplomacy information)]
}

We get information by the "name" part of the name:value pair, so it's important to get the right name if the field is something
we'll be searching for. 

JSON doesn't care too much about the order of things, but the nesting does matter. For example, the reader class
will expect all the player-info-fields to be in an object in the "players" array. (If you haven't seen JSON before, 
this will be clearer once you glance some examples.)

Here is the file with some comments:

{ //JSON objects go between braces. There is one big object in a file that contains everything.

// These are top level fields:
    "scenarioName": "Gundarchuksson's Weird",
    "gameLength":7,
    "numberOfPlayers":2,
    
//This is an example of an object (named "sunTrackSetting"), containing nested name:value information.
    "sunTrackSetting" : {
        "yellow":1,
        "blue":"J",
        "red":"D"
    },
    
// JSON supports arrays like this: [{an object}, "a string", 42]
// "players" is the array of objects, (e.g. each object is between {...}), one for each player
    "players": [
        { //First player stuff
            "name": "Snorri", //See, we expected to see the "name" part, but you can have anything you want in place of "Snorri"
            "provinces": ["UrfDurfal"], //What provinces they control? This is an array of strings, because they might have several.
            "setupOrder":2,
            "moveOrder":1,
            
            "units": { //What units and how many? Note that this is an object, not an array.
              "Heavy Horse":5,
              "Heavy Sword":4,
              "Bow":2,
              "Light Spear":4,
		//Add more stuff here! We just grab all these pairs, so any string for the unit type will be accepted here.
            },
            
            "characters": [ //This is an array of strings, since we know we only get one of each.
                "Snorri",
                "Therefond"
            ],
            "replacements":"1 in 3"
        },
        { //second player stuff, same as above.
            "name": "Goblin State",
            "provinces": ["Endore"],
            "setupOrder": 1,
            "moveOrder": 2,
            "units": {
              "Goblin Light Spear":8,
              "Human Heavy Horse":2,
              "Human Heavy Sword":2
            },
            
            "characters": [
                "Ganab the Nasty"
            ],
            "replacements":"1 in 3"
        }
    ],
    
//Another array for neutral players. This is pretty much like the "player" array, but has each object has diplomacy information too.
    "neutrals": [
        {
            "name": "Aardvark Wallow",
            "provinces": ["Aardvark Wallow"],
            "units": {
              "Heavy Pluglunk":10,
              "Light Bow":4,
              "Light Horse":2
            },
            
            "characters": [
                "Raman Cronkevitch",
                "Svartz Tarnkap"
            ],
            "diplomacy": {
                "leaningTowards": "Snorri",
                "amount":3
            }
        },
	{ other neutrals }, 
	{ etc }
    ]

} //end of file
