This is a file that holds changes that need to be made to the master class diagram.
Please use the following format, and leave spaces between change requests,
to indicate changes requested as follows:

Example:
/* Add a c-style multi-line comment that explains your rationale and any extra
 *   details needed to understand the change/update you are requesting.
 *   Add the literal changes below:
 */ 
Add subclass to MoveableUnit called Cavalry. 
Add subclass to Cavalry, RangedCavalry.
End Example



David Klingenberg:
/*   Remove Board. Replaced by MainMap class.
 *   Assuming we keep Providence. Your plant code will look like this for your overall diagram.
 *   Let me know if I need to wright definitions for the definition library.
 *
 *   According to Dr. J the inheritance arrow points towards the superclass.
 *   This seems ass backwards to me, that the MapHex class has the inheritance arrows pointing
 *   at the hex class and the same thing applies to the DiplomacyHex class.
 */
 
@startuml

Game *-- “<b>1..1</b>” MainMap

MainMap o-- “<b>1..*</b>” MapHex
MapHex “<b>1..1</b>” -|>  Hex

Providence “<b>1..25</b>” -o  MainMap

DiplomacyMap  o-- “<b>1..*</b>”  DiplomacyHex
Hex <|- “<b>1..1</b>” DiplomacyHex

@enduml

/*
 *  here is the detailed classes to use as you see fit.
 *  It has all the plantUML code you will need.
 */

@startuml


class MainMap{
 -HashMap <String, MapHex> mainMap
 -String hexNumber, northHexNumber, northEastHexNumber, 
            southEastHexNumber, southHexNumber, southWestHexNumber,
            northWestHexNumber, terrainKey, providenceName, hexName;
 -boolean cityHex, vortexHex, castleHex, capitalHex, townHex;
-int portalHex
 -DocumentBuilderFactory factory
 -DocumentBuilder builder
 -Document doc
 -File file = new File("resources/MainMap.xml")
 -HashMap<String, ArrayList<String>> edgeDirectionList
-{static}MainMap INSTANCE
-MainMap()
-BuildmainMap()
-CleanHex()
-GetDoc() :  NodeList
{static} GetMainMap() :  MainMap
+GetMapHex() : MapHex
-GetPortalHex() : int
-SetBuilder()
-SetCityHex()
-SetDoc()
 -SetEdgeDirectionList(Node edgeDerection, ArrayList<String> edgeList)
-SetFactory()
-SetHexName(Node hexItem)
-SetHexNumber(Node hexItem)
-SetMainMap(MapHex hexObject)
-SetNorthEastHexNumber(Node hexItem)
-SetNorthHexNumber(Node hexItem)
-SetNorthWestHexNumber(Node hexItem)
-SetPortalHex(Node hexItem)
-SetSouthEastHexNumber(Node hexItem)
-SetSouthEastHexNumber(Node hexItem)
-SetSouthHexNumber(Node hexItem)
-SetSouthWestHexNumber(Node hexItem)
-SetTerrainKey(Node hexItem)
-SetValidateFactory()
-SetVortexHex()
}

class MapHex{
-String hexName, terrainKey, providenceName;
-boolean cityHex, vortexHex, castleHex, capitalHex, 
townHex
-int portalHex
-HashMap<String, ArrayList<String>> hexEdgeMap
-ArrayList<String> northList, northWestList, northEastList, 
southList, southEastList, southWestList;

+MapHex(String id, String northHexID, String northEastHexID, 
                  String southEastHexID, String southHexID, String southWestHexID, 
                  String northWestHexID, String keyTerrain, String nameProvidence,
                  HashMap<String, ArrayList<String>> edgesOfHex)
+MapHex(String id, String northHexID, String northEastHexID, 
                  String southEastHexID, String southHexID, String southWestHexID, 
                  String northWestHexID, String keyTerrain, String nameProvidence, 
                  HashMap<String, ArrayList<String>> edgesOfHex,String nameHex)
+MapHex(String id, String northHexID, String northEastHexID, 
                  String southEastHexID, String southHexID, String southWestHexID, 
                  String northWestHexID, String keyTerrain, String nameProvidence, 
                  HashMap<String, ArrayList<String>> edgesOfHex, boolean hexIsCity, 
                  boolean hexIsCapital, boolean hexIsCastle, boolean hexIsTown, String nameHex)
+MapHex(String id, String northHexID, String northEastHexID, 
                  String southEastHexID, String southHexID, String southWestHexID, 
                  String northWestHexID, String keyTerrain, String nameProvidence, 
                  HashMap<String, ArrayList<String>> edgesOfHex, boolean hexVortex)
+MapHex(String id, String northHexID, String northEastHexID, 
                  String southEastHexID, String southHexID, String southWestHexID, 
                  String northWestHexID, String keyTerrain, String nameProvidence, 
                  HashMap<String,ArrayList<String>> edgesOfHex, int portalNumber)
+GetHexName() : String 
+GetHexSidDescription(String hexSideCode) : String 
+GetNorthEastHexSideDescription() : ArrayList<String> 
+GetNorthHexSideDescription() : ArrayList<String> 
+GetNorthHexSideDescription() : ArrayList<String> 
+GetNorthWestSideDescription() : ArrayList<String> 
+GetPortalNumber() : int
+GetProvidenceName() : String
+GetSouthEastHexSideDescription() : ArrayList<String> 
+GetSouthHexSideDescription() : ArrayList<String> 
+GetSouthWestHexSideDescription() : ArrayList<String> 
+GetTerrainDescription() : String 
+GetTerrainKey() : String 
+IsCapitalHex() : boolean
+IsCastleHex() : boolean
+IsCityHex() : boolean
+IsCityTownCastel() : boolean
+IsPortalHex() : boolean
+IsTownHex() : boolean 
+IsVortexHex() : boolean 
+ModifyTerrainCode(String keyterrain)
+RemoveHexEdgeAdditions(int edgedDirection,String hexEdgeCode)
-SetCapitalHex(boolean hexIsCapital)
-SetCastleHex(boolean hexIsCastleHex)
-SetCityHex(boolean hexIsCity)
+SetHexEdgeAdditions(int edgedDirection,String hexEdgeCode)
-SetHexName(String nameHex)
-SetIsVortex(boolean hexVortex)
-SetKeyterrain(String keyTerrain)
-SetPortalNumber(int portalNumber)
-SetProvidenceName(String nameProvidence)
-SetTownHex(boolean hexIsTown)
+getNorthEastHexEdgeCodes() : ArrayList<String> 
+getNorthHexEdgeCodes() : ArrayList<String> 
+getNorthWestHexEdgeCodes() : ArrayList<String> 
+getSoutWesthexEdgeCodes() : ArrayList<String>
+getSouthEastHexEdgeCodes() : ArrayList<String>
+getSouthHexEdgeCodes() :  ArrayList<String> 
-setHexEdgeList(HashMap<String, ArrayList<String>> edgesOfHex)
}

class Hex{
-String[] hexagon
-Hex(String ID, String northHexID, String northEastHexID, String southEastHexID, 
          String southHexID, String southWestHexID, String northWestHexID)
+GetID() : String
+GetIDofNorthEastHexagon() : String 
+GetIDofNorthHexagon() : String 
+GetIDofNorthWestHexagon() : String
+GetIDofSouthEastHexagon() : String
+GetIDofSoutHexagon() : String
+GetIDofSouthWestHexagon() : String
-SetID(String ID)
-SetIDofNorthEastHexagon(String ID)
-SetIDofNorthHexagon(String ID)
-SetIDofNorthWestHexagon(String ID)
-SetIDofSouthEastHexagon(String ID)
-SetIDofSouthHexagon(String ID)
-SetIDofSouthWestHexagon(String ID)
}

class DiplomacyHex{
-boolean playerHex, neturalHex
+public DiplomacyHex(String id, String northHexID, String northEastHexID, 
                            String southEastHexID, String southHexID, String southWestHexID, 
                            String northWestHexID, String specialHexCode)
+DiplomacyHex(String id, String northHexID, String northEastHexID, 
                            String southEastHexID, String southHexID, String southWestHexID, 
                            String northWestHexID, String specialHexCode)
-SetPlayerHex()
-SetNeturalHex()
+GetIsPlayerHex() : boolean 
+GetIsNeturalHex() : boolean 
}

class DiplomacyMap {
-HashMap <String, DiplomacyHex> DiplomacyMap
-String hexNumber, northHexNumber, northEastHexNumber, 
            southEastHexNumber, southHexNumber, southWestHexNumber,
            northWestHexNumber, specialCode
 -DocumentBuilderFactory factory;
 -DocumentBuilder builder
-Document doc
-File file
{static}DiplomacyMap INSTANCE
-DiplomacyMap()
-BuildDiplomacyMap()
{static}GetDiplomacyMap() : DiplomacyMap
+GetDiplomacyHex(String id) : DiplomacyHex 
}

Game *-- “<b>1..1</b>” MainMap

MainMap *-- “<b>1..*</b>” MapHex
MapHex “<b>1..1</b>” -|>  Hex

Providence “<b>1..25</b>” -*  MainMap

DiplomacyMap  *-- “<b>1..*</b>”  DiplomacyHex
Hex <|- “<b>1..1</b>” DiplomacyHex

@enduml

end David Klingenberg

/*  here are some changes to help fill out the chart section of the diagram.
 *  I don't see a solar cycle class of any kind so here's the one I wrote.
 *  It's more than a simple chart as the Suns relationship to each other and
 *  there starting positions very by scenario and therefore has to be 
 *  calculated versus a simple look up.
 */

@startuml

class StellarConfiguration{
	-yellowSunPosition : int
	-redSunPosition : char
	-blueSunPosition : char
	-redSunAscendent : boolean
	-redSunDescendent : boolean
	--
	+<<constructor>>StellarConfiguration(positionOfRedSun : char)
	+AdvanceSuns() : void
	-CheckMinorSunsPosition(minorSunAscendentPositionOne : char,\n minorSunAscendentPositionTwo : char,\nminorSunAscendentPositionThree : char) : void
	-SetSunPhase() : void
	+getYelloSunPosition() : int
	+getRedSunPosition() : char
	+getBlueSunPosition() : char
	+GetRedSunIsInAscension() : boolean
	+GetRedSunIsInDeclension() : boolean
	+GetBlueSunIsInAscension() : boolean
	+GetBlueSunIsInDeclension() : boolean 
	-SetYellowSunPosition(sunPosition : int) : void
	-SetRedSunPosition(sunPosition : char) : void
	-SetBlueSunPosition(sunPosition : char) : void
	-SetRedSunAscendent( sunAscension : boolean) : void
	-SetRedSunDescendent(sunDescendent : boolean) : void
	==
	Author: David Klingenberg
}

class RandomEvent{
	-currentEventKey : int
	-currentEventLength : int
	-currentEventDescription : int
	--
	+<<constructor>>RandomEvent(cEKey : int, cELength : int, cEDescription : int) : void
	+setCurrentEventKey (cEKey : int) : void
	+setCurrentEventLength (cELength :  int) : void
	+setCurrentEventDescription(cEDescription : int) : void
	+getCurrentEventKey () :  int
	+getCurrentEventLength (): int
	+getCurrentEventDescription() : int
	==
	Author: David Klingenberg
}

GameChart  *-- “<b>1..1</b>” RandomEvent
GameChart  *-- “<b>1..1</b>”  StellarConfiguration

@enduml
